/*
问题描述	
若一个矩阵中的某元素在其所在行最小而在其所在列最大，则该元素为矩阵的一个马鞍点。
请写一个程序，找出给定矩阵的马鞍点。

输入说明	
输入数据第一行只有两个整数m和n（0<m<100,0<n<100），分别表示矩阵的行数和列数；
接下来的m行、每行n个整数表示矩阵元素（矩阵中的元素互不相同），整数之间以空格间隔。

输出说明	
在一行上输出马鞍点的行号、列号（行号和列号从0开始计数）及元素的值（用一个空格分隔），之后换行；
若不存在马鞍点，则输出一个字符串“no”后换行。

输入样例	
4  3
11    13    121    
407   72    88
23    58    1 
134   30    62

输出样例	
1 1 72

*/

#include"stdio.h"
int main(void){
    //创建矩阵
    int m,n,i,j;
    scanf("%d %d",&m,&n);
    int a[m][n];
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
            scanf("%d",&a[i][j]);
        }
    }
    //扫描
    int t=0;//用于统计点个数
    for(i=0;i<m;i++){
        int minid=0,is=1;//判断指数is=1 默认是马鞍点
        for(j=1;j<n;j++){
            if(a[i][minid]>a[i][j]){
                minid=j;
            }
        }//找出第i行最小值a[i][minid]
        t++;//假设该点满足
        for(int k=0;k<m;k++){//遍历该纵行
            if(a[i][minid]<a[k][minid]){
                t--;//此时不满足
                is=0;
                break;
            }
        }
        //判断是否输出 is为指数
        if(is==1){
            printf("%d %d %d\n",i,minid,a[i][minid]);
        }
    }
    if(t==0){
        printf("no\n");
    }
}